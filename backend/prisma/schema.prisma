// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  password String
  nickname String
  posts    Post[]
  answers  Answer[]
  messages Message[]

  ChatRoom ChatRoom[]
}

model Post {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  createdAt   DateTime     @default(now())
  user        User         @relation(fields: [userId], references: [id])
  userId      Int
  answers     Answer[]
  attachments Attachment[]
}

model Answer {
  id        Int      @id @default(autoincrement())
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model ChatRoom {
  id       Int       @id @default(autoincrement())
  name     String
  messages Message[]
  users    User[]
}

model Message {
  id         Int      @id @default(autoincrement())
  content    String
  createdAt  DateTime @default(now())
  chatRoom   ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId Int
  user       User     @relation(fields: [userId], references: [id])
  userId     Int
}

model Attachment {
  id        Int      @id @default(autoincrement())
  fileName  String
  fileUrl   String
  fileSize  Int
  fileType  String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id])
  postId    Int
}
