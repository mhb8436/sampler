version: '3.8'

services:
  nginx:
    image: nginx:alpine
    ports:
      - '80:80'
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    expose:
      - '3000'
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/sampler?schema=public
      - JWT_SECRET=your_jwt_secret_here
      - AZURE_STORAGE_CONNECTION_STRING=your_azure_storage_connection_string_here
      - AZURE_STORAGE_CONTAINER_NAME=your_azure_storage_container_name_here
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: ['CMD', 'wget', '--spider', 'http://localhost:3000/health']
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s

  postgres:
    image: postgres:14-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=sampler
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      - 'postgres'
      - '-c'
      - 'max_connections=100'
      - '-c'
      - 'shared_buffers=256MB'

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
